Ext_Rel2 <- Ext_Rel1[Ext_Rel1[, "f2"]=='Hydro', ]
# Reording the dataframe with respect to Periods squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(p)),]
# Reording the dataframe with respect to Days squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(d)),]
#Merging 2 Columns into one inorder to meet the sub daily representation case.
Ext_Rel2$new <- paste(Ext_Rel2$d,Ext_Rel2$p)
#Turn your 'new' column into a character vector
Ext_Rel2$new <- as.character(Ext_Rel2$new)
#Then turn it back into a factor with the levels in the correct order
Ext_Rel2$new <- factor(Ext_Rel2$new, levels=unique(Ext_Rel2$new))
# Plotting using ggplot 2
ggplot(data = Ext_Rel2, aes(x = new, y = Freq)) +
geom_point(fill = "white", size=2) +
scale_shape_manual(values = c(22, 21)) +
xlab("Daily Timesteps") +ylab("Release (cfs)")+
theme(axis.text.x = element_text( color="black", size=12, face="bold",angle=90, hjust =-0.3,vjust =0),
axis.text.y = element_text( color="black", size=12, face="bold"),
axis.title.x = element_text(color="blue", size=16, face="bold", vjust = -0.3),
axis.title.y = element_text(color="blue", size=16, face="bold", vjust = 2))+
theme(legend.text=element_text(size=12,face="bold"))+
theme(legend.text=element_text(size=12,face="bold"))+
ggtitle("Releases under Extreme Hydro value for V4 Total Volume")+
theme(plot.title = element_text(size=18,hjust =0.5, vjust = 2,face="bold"))
dev.copy(png,"Extreme_Hydro_Release_V4.png", width =2000, height = 1000,res=150)
dev.off()
##########################
#HydroPowerobjective and V5
##########################
# Filtering the data frame for only V1 Senario
Ext_Rel1<- dfExtRel_alleqs[dfExtRel_alleqs[, "tot_vol"]=='V5', ]
# Filtering the data frame for onlyHydro
Ext_Rel2 <- Ext_Rel1[Ext_Rel1[, "f2"]=='Hydro', ]
# Reording the dataframe with respect to Periods squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(p)),]
# Reording the dataframe with respect to Days squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(d)),]
#Merging 2 Columns into one inorder to meet the sub daily representation case.
Ext_Rel2$new <- paste(Ext_Rel2$d,Ext_Rel2$p)
#Turn your 'new' column into a character vector
Ext_Rel2$new <- as.character(Ext_Rel2$new)
#Then turn it back into a factor with the levels in the correct order
Ext_Rel2$new <- factor(Ext_Rel2$new, levels=unique(Ext_Rel2$new))
# Plotting using ggplot 2
ggplot(data = Ext_Rel2, aes(x = new, y = Freq)) +
geom_point(fill = "white", size=2) +
scale_shape_manual(values = c(22, 21)) +
xlab("Daily Timesteps") +ylab("Release (cfs)")+
theme(axis.text.x = element_text( color="black", size=12, face="bold",angle=90, hjust =-0.3,vjust =0),
axis.text.y = element_text( color="black", size=12, face="bold"),
axis.title.x = element_text(color="blue", size=16, face="bold", vjust = -0.3),
axis.title.y = element_text(color="blue", size=16, face="bold", vjust = 2))+
theme(legend.text=element_text(size=12,face="bold"))+
theme(legend.text=element_text(size=12,face="bold"))+
ggtitle("Releases under Extreme Hydro value for V5 Total Volume")+
theme(plot.title = element_text(size=18,hjust =0.5, vjust = 2,face="bold"))
dev.copy(png,"Extreme_Hydro_Release_V5.png", width =2000, height = 1000,res=150)
dev.off()
#Load and plot Bug Flow Model results
#
# Moazzam Ali Rind
# created: May 19, 2020
# moazzamalirind@gmail.com
# Model Files and Code Source: https://github.com/moazzamalirind/-Bug-flow-
# 1st method for required gdx Package Installation:
# Go here and download the package: http://support.gams.com/doku.php?id=gdxrrw:interfacing_gams_and_r
# Windows installation: In the R environment, navigate to the directory containing the binary package file
#(see download links above), and, substituting the version number for a.b.c, type: install.packages("gdxrrw_a.b.c.zip") or,
# depending on the version of R, install.packages("gdxrrw_a.b.c.zip",repos=NULL)
#Some help and examples here: http://ftp.gamsworld.org/presentations/informs2012_gdxrrw.pdf
# or
# 2ndmethod for required gdx Package Installation:
# start here:
rm(list = ls())  #Clear history
# Load all packages and libraries
if (!require(reshape2)) {
install.packages("reshape2", repos="http://cran.r-project.org")
library(reshape2)
}
if (!require(gdxrrw)) {
download.file("http://support.gams.com/lib/exe/fetch.php?media=gdxrrw:gdxrrw_1.0.4_r351.zip","gdxrrw_1.0.4.zip")
install.packages("gdxrrw_1.0.4.zip",repos=NULL)
library(gdxrrw)
}
if (!require(RColorBrewer)) {
install.packages("RColorBrewer",repos="http://cran.r-project.org")
library(RColorBrewer)
}
if (!require(ggplot2)) {
install.packages("ggplot2",repos="http://cran.r-project.org")
library(ggplot2)
}
if (!require(dplyr)) {
install.packages("dplyr",repos="http://cran.r-project.org")
library(dplyr)
}
if (!require(tidyr)) {
install.packages("tidyr",repos="http://cran.r-project.org")
library(tidyr)
}
# Check the gams gdx interface is working
igdx("")
###Set working directory (as per your Favorable location to a  1.0MAFess easily)
setwd("E:\\Project_Bugflow\\June18_newObjective\\June2018_newobj_Analysis\\results")
# Load igdx directory from your computer
igdx("C:\\GAMS\\win64\\24.2");
igdx();
###############################################
## Read in Deterministic Model Results
###############################################
gdxfile <- "newmetric_analysis.gdx"
gdxfile
# Output summary of gdx file contents to console
#gdxInfo(gdxName = gdxfile, dump=FALSE, returnList=TRUE, returnDF=TRUE)
#  Objective functions values under all senarios with all equations intact.
Objval_alleqs <- rgdx(gdxfile, list(name="Fstore", form = "full"))$val
# Volume senario values
monthlyVol_values <- rgdx(gdxfile, list(name="Vol_monthlyrelease", form = "full"))$val
#Release values under extreme points with respect to different senarios and all equations intact
Extpoint_rel_alleqs <- rgdx(gdxfile, list(name="RStore", form = "full"))$val
#Energy Generated values under extreme points with respect to different senarios and all equations intact
Extpoint_EnergyGen_alleqs<- rgdx(gdxfile, list(name="XStore", form = "full"))$val
#Convert to dataframes
dfmonthvol<- as.data.frame.table(monthlyVol_values)
dfobj_alleqs <- as.data.frame.table(Objval_alleqs)
dfExtRel_alleqs<- as.data.frame.table(Extpoint_rel_alleqs)
dfExtEnergy_Bugflow<- as.data.frame.table(Extpoint_EnergyGen_alleqs)
#############################################
#Rearranging and Plotting Section......
#############################################
library(ggplot2)
library(reshape2)
library(dplyr)
library(plyr)
library(RColorBrewer)
#############################################
#filtering the data frame with respect to Objective
# Filtering the data frame for only BugIndex Objective
Obj_Bug<- dfobj_alleqs[dfobj_alleqs[, "f"]=='BugIndex', ]
Obj_Bug<- Obj_Bug[with(Obj_Bug,order(tot_vol)),]
# Filtering the data frame for only Hydro Objective
Obj_Hydro<- dfobj_alleqs[dfobj_alleqs[, "f"]=='Hydro', ]
Obj_Hydro<- Obj_Hydro[with(Obj_Hydro,order(tot_vol)),]
#Merging both filtered data frame in one
Obj_Bug$Hydro_Obj<-Obj_Hydro$Freq
#Removing Freq Column bcz its extra and confusing here.
Obj_Bug$f<- NULL
names(Obj_Bug)[3]<-"BugDays"
#Creating New Column for linkage with total volume data frame.
Obj_Bug$Tot_Vol_AF<-Obj_Bug$tot_vol
#Replacing values of current data frame with values of total monthly volume used in Gams model
Obj_Bug$Tot_Vol_AF<- ifelse(Obj_Bug$tot_vol== "V1",dfmonthvol[1,]$Freq ,
ifelse(Obj_Bug$tot_vol== "V2",dfmonthvol[2,]$Freq ,
ifelse(Obj_Bug$tot_vol== "V3",dfmonthvol[3,]$Freq ,
ifelse(Obj_Bug$tot_vol== "V4",dfmonthvol[4,]$Freq ,
ifelse(Obj_Bug$tot_vol== "V5",dfmonthvol[5,]$Freq , "0")))))
#converting the observed flow number to the nearest decimal
Obj_Bug$Tot_Vol_AF<- as.factor(replace(Obj_Bug$Tot_Vol_AF,Obj_Bug$Tot_Vol_AF=='793857.12','7.94e+05'))
#Coverting it into character
Obj_Bug$tot_vol <- as.character(Obj_Bug$tot_vol)
Obj_Bug$Tot_Vol_AF <- as.character(Obj_Bug$Tot_Vol_AF)
Obj_Bug$f2 <- as.character(Obj_Bug$f2)
Obj_Bug$Tot_Vol_AF<- replace(Obj_Bug$Tot_Vol_AF,Obj_Bug$Tot_Vol_AF=="1100000","1.1e+06")
#ideal point
Obj_Bug[nrow(Obj_Bug) + 1,] <- c("Ideal_Point","Ideal_Point",max(Obj_Bug$BugDays),max(Obj_Bug$Hydro_Obj),"Ideal_Point")
Obj_Bug$Hydro_Obj <-as.numeric(Obj_Bug$Hydro_Obj)
Obj_Bug$BugDays <-as.numeric(Obj_Bug$BugDays)
Obj_Bug$Hydro_Obj <-Obj_Bug$Hydro_Obj/10^6
#####################################################
# Plotting Objective Values (Pareto-optimal Curve)
#####################################################
# With blue Palette color
ggplot(Obj_Bug, aes(Hydro_Obj,BugDays,color = Tot_Vol_AF, linetype = Tot_Vol_AF))+
geom_point(stat = "identity", size=6)+
geom_path(size=1.5)+
xlab("Hydro-Power Revenue Generated(Million $)") + ylab("Number of low flow days")+
theme_gray(base_size = 16)+
theme(panel.background = element_rect(fill = "gray80", colour = "#6D9EC1", size = 2, linetype = "solid"),
panel.grid.major = element_line(size = 0.5, linetype = 'solid', colour = "white"),
panel.grid.minor = element_line(size = 0.25, linetype = 'solid', colour = "white"))+
theme(axis.text.x = element_text( color="black", size=20, angle=45, hjust =0.8, vjust =1),
axis.text.y = element_text( color="black", size=20),
axis.title.x = element_text(color="blue", size=24, face="bold", vjust = -0.3),
axis.title.y = element_text(color="blue", size=24, face="bold", vjust = 2))+
scale_x_continuous(breaks = seq(0,40,1))+
scale_y_continuous(breaks = seq(0,60,5))+
theme(legend.title=element_text(size=22,face="bold"))+
theme(legend.text=element_text(size=22,face="bold"))+
ggtitle("Pareto-Optimal Curve (June-2018)")+
theme(plot.title = element_text(size=30,hjust =0.5, vjust = 2,face="bold"),legend.justification=c(1,0))
#scale_color_manual(name="Vol_Ac-ft",values=c( "Ideal_Point"= "red","Observed"="black","V1" = "aliceblue", "V2" = "slategray1", "V3" = "steelblue2", "V4" = "royalblue2","V5" = "midnightblue" ))
dev.copy(png,"Pareto-optimal(Bluecolor).png", width =5000, height =2500,res=200)
dev.off()
#####################################################
# Plotting Release
#####################################################
#################
#BugIndex and V1
#################
# Filtering the data frame for only V1 Senario
Ext_Rel1<- dfExtRel_alleqs[dfExtRel_alleqs[, "tot_vol"]=='V1', ]
# Filtering the data frame for only BugDays
Ext_Rel2 <- Ext_Rel1[Ext_Rel1[, "f2"]=='BugIndex', ]
# Reording the dataframe with respect to Periods squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(p)),]
# Reording the dataframe with respect to Days squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(d)),]
#Merging 2 Columns into one inorder to meet the sub daily representation case.
Ext_Rel2$new <- paste(Ext_Rel2$d,Ext_Rel2$p)
#Turn your 'new' column into a character vector
Ext_Rel2$new <- as.character(Ext_Rel2$new)
#Then turn it back into a factor with the levels in the correct order
Ext_Rel2$new <- factor(Ext_Rel2$new, levels=unique(Ext_Rel2$new))
# Plotting using ggplot 2
ggplot(data = Ext_Rel2, aes(x = new, y = Freq)) +
geom_point(fill = "white", size=2) +
scale_shape_manual(values = c(22, 21)) +
xlab("Daily Timesteps") +ylab("Release (cfs)")+
theme(axis.text.x = element_text( color="black", size=12, face="bold",angle=90, hjust =-0.3,vjust =0),
axis.text.y = element_text( color="black", size=12, face="bold"),
axis.title.x = element_text(color="blue", size=16, face="bold", vjust = -0.3),
axis.title.y = element_text(color="blue", size=16, face="bold", vjust = 2))+
theme(legend.text=element_text(size=12,face="bold"))+
ggtitle("Releases under Maximum number of Low Flow Days for V1 Total Volume")+
theme(plot.title = element_text(size=18,hjust =0.5, vjust = 2,face="bold"))
dev.copy(png,"Extreme_bugindex_Release_V1.png", width =2000, height = 1000,res=150)
dev.off()
#################
#BugIndex and V2
#################
# Filtering the data frame for only V2 Senario
Ext_Rel1<- dfExtRel_alleqs[dfExtRel_alleqs[, "tot_vol"]=='V2', ]
# Filtering the data frame for only BugDays
Ext_Rel2 <- Ext_Rel1[Ext_Rel1[, "f2"]=='BugIndex', ]
# Reording the dataframe with respect to Periods squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(p)),]
# Reording the dataframe with respect to Days squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(d)),]
#Merging 2 Columns into one inorder to meet the sub daily representation case.
Ext_Rel2$new <- paste(Ext_Rel2$d,Ext_Rel2$p)
#Turn your 'new' column into a character vector
Ext_Rel2$new <- as.character(Ext_Rel2$new)
#Then turn it back into a factor with the levels in the correct order
Ext_Rel2$new <- factor(Ext_Rel2$new, levels=unique(Ext_Rel2$new))
# Plotting using ggplot 2
ggplot(data = Ext_Rel2, aes(x = new, y = Freq)) +
geom_point(fill = "white", size=2) +
scale_shape_manual(values = c(22, 21)) +
xlab("Daily Timesteps") +ylab("Release (cfs)")+
theme(axis.text.x = element_text( color="black", size=12, face="bold",angle=90, hjust =-0.3,vjust =0),
axis.text.y = element_text( color="black", size=12, face="bold"),
axis.title.x = element_text(color="blue", size=16, face="bold", vjust = -0.3),
axis.title.y = element_text(color="blue", size=16, face="bold", vjust = 2))+
theme(legend.text=element_text(size=12,face="bold"))+
ggtitle("Releases under Maximum number of Low Flow Days for V2 Total Volume")+
theme(plot.title = element_text(size=18,hjust =0.5, vjust = 2,face="bold"))
dev.copy(png,"Extreme_bugindex_Release_V2.png", width =2000, height = 1000,res=150)
dev.off()
#################
#BugIndex and V3
#################
# Filtering the data frame for only V3 Senario
Ext_Rel1<- dfExtRel_alleqs[dfExtRel_alleqs[, "tot_vol"]=='V3', ]
# Filtering the data frame for only BugDays
Ext_Rel2 <- Ext_Rel1[Ext_Rel1[, "f2"]=='BugIndex', ]
# Reording the dataframe with respect to Periods squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(p)),]
# Reording the dataframe with respect to Days squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(d)),]
#Merging 2 Columns into one inorder to meet the sub daily representation case.
Ext_Rel2$new <- paste(Ext_Rel2$d,Ext_Rel2$p)
#Turn your 'new' column into a character vector
Ext_Rel2$new <- as.character(Ext_Rel2$new)
#Then turn it back into a factor with the levels in the correct order
Ext_Rel2$new <- factor(Ext_Rel2$new, levels=unique(Ext_Rel2$new))
# Plotting using ggplot 2
ggplot(data = Ext_Rel2, aes(x = new, y = Freq)) +
geom_point(fill = "white", size=2) +
scale_shape_manual(values = c(22, 21)) +
xlab("Daily Timesteps") +ylab("Release (cfs)")+
theme(axis.text.x = element_text( color="black", size=12, face="bold",angle=90, hjust =-0.3,vjust =0),
axis.text.y = element_text( color="black", size=12, face="bold"),
axis.title.x = element_text(color="blue", size=16, face="bold", vjust = -0.3),
axis.title.y = element_text(color="blue", size=16, face="bold", vjust = 2))+
theme(legend.text=element_text(size=12,face="bold"))+
ggtitle("Releases under Maximum number of Low Flow Days for V3 Total Volume")+
theme(plot.title = element_text(size=18,hjust =0.5, vjust = 2,face="bold"))
dev.copy(png,"Extreme_bugindex_Release_V3.png", width =2000, height = 1000,res=150)
dev.off()
#################
#BugIndex and V4
#################
# Filtering the data frame for only V4 Senario
Ext_Rel1<- dfExtRel_alleqs[dfExtRel_alleqs[, "tot_vol"]=='V4', ]
# Filtering the data frame for only BugDays
Ext_Rel2 <- Ext_Rel1[Ext_Rel1[, "f2"]=='BugIndex', ]
# Reording the dataframe with respect to Periods squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(p)),]
# Reording the dataframe with respect to Days squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(d)),]
#Merging 2 Columns into one inorder to meet the sub daily representation case.
Ext_Rel2$new <- paste(Ext_Rel2$d,Ext_Rel2$p)
#Turn your 'new' column into a character vector
Ext_Rel2$new <- as.character(Ext_Rel2$new)
#Then turn it back into a factor with the levels in the correct order
Ext_Rel2$new <- factor(Ext_Rel2$new, levels=unique(Ext_Rel2$new))
# Plotting using ggplot 2
ggplot(data = Ext_Rel2, aes(x = new, y = Freq)) +
geom_point(fill = "white", size=2) +
scale_shape_manual(values = c(22, 21)) +
xlab("Daily Timesteps") +ylab("Release (cfs)")+
theme(axis.text.x = element_text( color="black", size=12, face="bold",angle=90, hjust =-0.3,vjust =0),
axis.text.y = element_text( color="black", size=12, face="bold"),
axis.title.x = element_text(color="blue", size=16, face="bold", vjust = -0.3),
axis.title.y = element_text(color="blue", size=16, face="bold", vjust = 2))+
theme(legend.text=element_text(size=12,face="bold"))+
ggtitle("Releases under Maximum number of Low Flow Days for V4 Total Volume")+
theme(plot.title = element_text(size=18,hjust =0.5, vjust = 2,face="bold"))
dev.copy(png,"Extreme_bugindex_Release_V4.png", width =2000, height = 1000,res=150)
dev.off()
#################
#BugIndex and V5
#################
# Filtering the data frame for only V5 Senario
Ext_Rel1<- dfExtRel_alleqs[dfExtRel_alleqs[, "tot_vol"]=='V5', ]
# Filtering the data frame for only BugDays
Ext_Rel2 <- Ext_Rel1[Ext_Rel1[, "f2"]=='BugIndex', ]
# Reording the dataframe with respect to Periods squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(p)),]
# Reording the dataframe with respect to Days squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(d)),]
#Merging 2 Columns into one inorder to meet the sub daily representation case.
Ext_Rel2$new <- paste(Ext_Rel2$d,Ext_Rel2$p)
#Turn your 'new' column into a character vector
Ext_Rel2$new <- as.character(Ext_Rel2$new)
#Then turn it back into a factor with the levels in the correct order
Ext_Rel2$new <- factor(Ext_Rel2$new, levels=unique(Ext_Rel2$new))
# Plotting using ggplot 2
ggplot(data = Ext_Rel2, aes(x = new, y = Freq)) +
geom_point(fill = "white", size=2) +
scale_shape_manual(values = c(22, 21)) +
xlab("Daily Timesteps") +ylab("Release (cfs)")+
theme(axis.text.x = element_text( color="black", size=12, face="bold",angle=90, hjust =-0.3,vjust =0),
axis.text.y = element_text( color="black", size=12, face="bold"),
axis.title.x = element_text(color="blue", size=16, face="bold", vjust = -0.3),
axis.title.y = element_text(color="blue", size=16, face="bold", vjust = 2))+
theme(legend.text=element_text(size=12,face="bold"))+
ggtitle("Releases under Maximum number of Low Flow Days for V5 Total Volume")+
theme(plot.title = element_text(size=18,hjust =0.5, vjust = 2,face="bold"))
dev.copy(png,"Extreme_bugindex_Release_V5.png", width =2000, height = 1000,res=150)
dev.off()
##########################
#HydroPowerobjective and V1
##########################
# Filtering the data frame for only V1 Senario
Ext_Rel1<- dfExtRel_alleqs[dfExtRel_alleqs[, "tot_vol"]=='V1', ]
# Filtering the data frame for onlyHydro
Ext_Rel2 <- Ext_Rel1[Ext_Rel1[, "f2"]=='Hydro', ]
# Reording the dataframe with respect to Periods squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(p)),]
# Reording the dataframe with respect to Days squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(d)),]
#Merging 2 Columns into one inorder to meet the sub daily representation case.
Ext_Rel2$new <- paste(Ext_Rel2$d,Ext_Rel2$p)
#Turn your 'new' column into a character vector
Ext_Rel2$new <- as.character(Ext_Rel2$new)
#Then turn it back into a factor with the levels in the correct order
Ext_Rel2$new <- factor(Ext_Rel2$new, levels=unique(Ext_Rel2$new))
# Plotting using ggplot 2
ggplot(data = Ext_Rel2, aes(x = new, y = Freq)) +
geom_point(fill = "white", size=2) +
scale_shape_manual(values = c(22, 21)) +
xlab("Daily Timesteps") +ylab("Release (cfs)")+
theme(axis.text.x = element_text( color="black", size=12, face="bold",angle=90, hjust =-0.3,vjust =0),
axis.text.y = element_text( color="black", size=12, face="bold"),
axis.title.x = element_text(color="blue", size=16, face="bold", vjust = -0.3),
axis.title.y = element_text(color="blue", size=16, face="bold", vjust = 2))+
theme(legend.text=element_text(size=12,face="bold"))+
theme(legend.text=element_text(size=12,face="bold"))+
ggtitle("Releases under Extreme Hydro value for V1 Total Volume")+
theme(plot.title = element_text(size=18,hjust =0.5, vjust = 2,face="bold"))
dev.copy(png,"Extreme_Hydro_Release_V1.png", width =2000, height = 1000,res=150)
dev.off()
##########################
#HydroPowerobjective and V2
##########################
# Filtering the data frame for only V1 Senario
Ext_Rel1<- dfExtRel_alleqs[dfExtRel_alleqs[, "tot_vol"]=='V2', ]
# Filtering the data frame for onlyHydro
Ext_Rel2 <- Ext_Rel1[Ext_Rel1[, "f2"]=='Hydro', ]
# Reording the dataframe with respect to Periods squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(p)),]
# Reording the dataframe with respect to Days squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(d)),]
#Merging 2 Columns into one inorder to meet the sub daily representation case.
Ext_Rel2$new <- paste(Ext_Rel2$d,Ext_Rel2$p)
#Turn your 'new' column into a character vector
Ext_Rel2$new <- as.character(Ext_Rel2$new)
#Then turn it back into a factor with the levels in the correct order
Ext_Rel2$new <- factor(Ext_Rel2$new, levels=unique(Ext_Rel2$new))
# Plotting using ggplot 2
ggplot(data = Ext_Rel2, aes(x = new, y = Freq)) +
geom_point(fill = "white", size=2) +
scale_shape_manual(values = c(22, 21)) +
xlab("Daily Timesteps") +ylab("Release (cfs)")+
theme(axis.text.x = element_text( color="black", size=12, face="bold",angle=90, hjust =-0.3,vjust =0),
axis.text.y = element_text( color="black", size=12, face="bold"),
axis.title.x = element_text(color="blue", size=16, face="bold", vjust = -0.3),
axis.title.y = element_text(color="blue", size=16, face="bold", vjust = 2))+
theme(legend.text=element_text(size=12,face="bold"))+
theme(legend.text=element_text(size=12,face="bold"))+
ggtitle("Releases under Extreme Hydro value for V2 Total Volume")+
theme(plot.title = element_text(size=18,hjust =0.5, vjust = 2,face="bold"))
dev.copy(png,"Extreme_Hydro_Release_V2.png", width =2000, height = 1000,res=150)
dev.off()
##########################
#HydroPowerobjective and V3
##########################
# Filtering the data frame for only V3 Senario
Ext_Rel1<- dfExtRel_alleqs[dfExtRel_alleqs[, "tot_vol"]=='V3', ]
# Filtering the data frame for onlyHydro
Ext_Rel2 <- Ext_Rel1[Ext_Rel1[, "f2"]=='Hydro', ]
# Reording the dataframe with respect to Periods squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(p)),]
# Reording the dataframe with respect to Days squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(d)),]
#Merging 2 Columns into one inorder to meet the sub daily representation case.
Ext_Rel2$new <- paste(Ext_Rel2$d,Ext_Rel2$p)
#Turn your 'new' column into a character vector
Ext_Rel2$new <- as.character(Ext_Rel2$new)
#Then turn it back into a factor with the levels in the correct order
Ext_Rel2$new <- factor(Ext_Rel2$new, levels=unique(Ext_Rel2$new))
# Plotting using ggplot 2
ggplot(data = Ext_Rel2, aes(x = new, y = Freq)) +
geom_point(fill = "white", size=2) +
scale_shape_manual(values = c(22, 21)) +
xlab("Daily Timesteps") +ylab("Release (cfs)")+
theme(axis.text.x = element_text( color="black", size=12, face="bold",angle=90, hjust =-0.3,vjust =0),
axis.text.y = element_text( color="black", size=12, face="bold"),
axis.title.x = element_text(color="blue", size=16, face="bold", vjust = -0.3),
axis.title.y = element_text(color="blue", size=16, face="bold", vjust = 2))+
theme(legend.text=element_text(size=12,face="bold"))+
theme(legend.text=element_text(size=12,face="bold"))+
ggtitle("Releases under Extreme Hydro value for V3 Total Volume")+
theme(plot.title = element_text(size=18,hjust =0.5, vjust = 2,face="bold"))
dev.copy(png,"Extreme_Hydro_Release_V3.png", width =2000, height = 1000,res=150)
dev.off()
##########################
#HydroPowerobjective and V4
##########################
# Filtering the data frame for only V1 Senario
Ext_Rel1<- dfExtRel_alleqs[dfExtRel_alleqs[, "tot_vol"]=='V4', ]
# Filtering the data frame for onlyHydro
Ext_Rel2 <- Ext_Rel1[Ext_Rel1[, "f2"]=='Hydro', ]
# Reording the dataframe with respect to Periods squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(p)),]
# Reording the dataframe with respect to Days squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(d)),]
#Merging 2 Columns into one inorder to meet the sub daily representation case.
Ext_Rel2$new <- paste(Ext_Rel2$d,Ext_Rel2$p)
#Turn your 'new' column into a character vector
Ext_Rel2$new <- as.character(Ext_Rel2$new)
#Then turn it back into a factor with the levels in the correct order
Ext_Rel2$new <- factor(Ext_Rel2$new, levels=unique(Ext_Rel2$new))
# Plotting using ggplot 2
ggplot(data = Ext_Rel2, aes(x = new, y = Freq)) +
geom_point(fill = "white", size=2) +
scale_shape_manual(values = c(22, 21)) +
xlab("Daily Timesteps") +ylab("Release (cfs)")+
theme(axis.text.x = element_text( color="black", size=12, face="bold",angle=90, hjust =-0.3,vjust =0),
axis.text.y = element_text( color="black", size=12, face="bold"),
axis.title.x = element_text(color="blue", size=16, face="bold", vjust = -0.3),
axis.title.y = element_text(color="blue", size=16, face="bold", vjust = 2))+
theme(legend.text=element_text(size=12,face="bold"))+
theme(legend.text=element_text(size=12,face="bold"))+
ggtitle("Releases under Extreme Hydro value for V4 Total Volume")+
theme(plot.title = element_text(size=18,hjust =0.5, vjust = 2,face="bold"))
dev.copy(png,"Extreme_Hydro_Release_V4.png", width =2000, height = 1000,res=150)
dev.off()
##########################
#HydroPowerobjective and V5
##########################
# Filtering the data frame for only V1 Senario
Ext_Rel1<- dfExtRel_alleqs[dfExtRel_alleqs[, "tot_vol"]=='V5', ]
# Filtering the data frame for onlyHydro
Ext_Rel2 <- Ext_Rel1[Ext_Rel1[, "f2"]=='Hydro', ]
# Reording the dataframe with respect to Periods squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(p)),]
# Reording the dataframe with respect to Days squence.
Ext_Rel2 <- Ext_Rel2[with(Ext_Rel2,order(d)),]
#Merging 2 Columns into one inorder to meet the sub daily representation case.
Ext_Rel2$new <- paste(Ext_Rel2$d,Ext_Rel2$p)
#Turn your 'new' column into a character vector
Ext_Rel2$new <- as.character(Ext_Rel2$new)
#Then turn it back into a factor with the levels in the correct order
Ext_Rel2$new <- factor(Ext_Rel2$new, levels=unique(Ext_Rel2$new))
# Plotting using ggplot 2
ggplot(data = Ext_Rel2, aes(x = new, y = Freq)) +
geom_point(fill = "white", size=2) +
scale_shape_manual(values = c(22, 21)) +
xlab("Daily Timesteps") +ylab("Release (cfs)")+
theme(axis.text.x = element_text( color="black", size=12, face="bold",angle=90, hjust =-0.3,vjust =0),
axis.text.y = element_text( color="black", size=12, face="bold"),
axis.title.x = element_text(color="blue", size=16, face="bold", vjust = -0.3),
axis.title.y = element_text(color="blue", size=16, face="bold", vjust = 2))+
theme(legend.text=element_text(size=12,face="bold"))+
theme(legend.text=element_text(size=12,face="bold"))+
ggtitle("Releases under Extreme Hydro value for V5 Total Volume")+
theme(plot.title = element_text(size=18,hjust =0.5, vjust = 2,face="bold"))
dev.copy(png,"Extreme_Hydro_Release_V5.png", width =2000, height = 1000,res=150)
dev.off()
View(Obj_Bug)
